{"version":3,"sources":["webpack:///./src/components/results.js","webpack:///./src/pages/past-results.js"],"names":["Results","year","pastVotes","votes","electorates","array","party","push","name","map","Grid","container","direction","spacing","key","item","xs","Typography","variant","formatPartyName","toFixed","PastResults","coordinates","getCoordinates","useState","years","activeYear","setActiveYear","tabValue","setTabValue","getSeatAllocations","seats","setSeats","useStyles","hideMob","hideDesktop","parliament","handleChange","event","newValue","innerText","target","PastYears","Tabs","value","onChange","indicatorColor","textColor","scrollButtons","Tab","label","title","justify","alignItems","md","className","sm"],"mappings":"gNAMaA,EAAU,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACJC,IAAUD,GAAjCE,EAD2B,EAC3BA,MAAOC,EADoB,EACpBA,YACXC,EAAQ,GACZ,IAAK,IAAIC,KAASH,EAChBE,EAAME,KAAK,CACTC,KAAMF,EACNH,MAAOA,EAAMG,GACbF,YAAaA,EAAYE,KAG7B,OACED,EAAMI,KAAI,SAAAH,GACR,IAAIF,EAAcE,EAAMF,YACtBE,EAAMF,YAAc,EAApB,IACME,EAAMF,YADZ,mBAEME,EAAMF,YAFZ,cAGE,GACJ,OACE,kBAACM,EAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,QAAS,EAAGC,IAAKR,EAAME,MACrD,kBAACE,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GACb,kBAACC,EAAA,EAAD,CAAYC,QAAQ,SAASC,YAAgBb,EAAME,QAErD,kBAACE,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACC,GAAI,GACvB,kBAACN,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GACb,kBAACC,EAAA,EAAD,CAAYC,QAAQ,SAASZ,EAAMH,MAAMiB,QAAQ,GAAjD,OAEF,kBAACV,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GACb,kBAACC,EAAA,EAAD,CAAYC,QAAQ,WAAWd,U,wBCwC9BiB,UA5DK,WAClB,IAAMC,EAAcC,cADI,EAEYC,mBAASC,IAAM,IAA5CC,EAFiB,KAELC,EAFK,OAGQH,mBAAS,GAAlCI,EAHiB,KAGPC,EAHO,OAIEL,mBAASM,YAAmBJ,IAA/CK,EAJiB,KAIVC,EAJU,OAMqBC,cAArCC,EANgB,EAMhBA,QAASC,EANO,EAMPA,YAAaC,EANN,EAMMA,WAExBC,EAAe,SAACC,EAAOC,GAAc,IACjCC,EAAcF,EAAMG,OAApBD,UACRR,EAASF,YAAmBU,IAC5Bb,EAAca,GACdX,EAAYU,IAGRG,EAAY,SAAC,GAAe,IAAbjB,EAAY,EAAZA,MACnB,OACE,kBAACkB,EAAA,EAAD,CACEC,MAAOhB,EACPiB,SAAUR,EACVS,eAAe,UACfC,UAAU,UACV7B,QAAQ,aACR8B,cAAc,MAEbvB,EAAMhB,KAAI,SAAAR,GAAI,OACb,kBAACgD,EAAA,EAAD,CACEC,MAAOjD,EACPa,IAAKb,GAEJA,QAOX,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKkD,MAAM,eACX,kBAACzC,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAS,EAAGD,UAAU,MAAMwC,QAAQ,SAASC,WAAW,UACtE,kBAAC3C,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIsC,GAAI,EAAGC,UAAWnB,GACnC,kBAAC,IAAD,CAAYd,YAAaA,EAAaS,MAAOA,EAAO9B,KAAMyB,KAE5D,kBAAChB,EAAA,EAAD,CAAMC,WAAS,EAACI,MAAI,EAACF,QAAS,EAAGG,GAAI,GAAIsC,GAAI,EAAGF,QAAQ,UACtD,kBAAC1C,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIuC,UAAWpB,GAC5B,kBAACO,EAAD,CAAWjB,MAAOA,OAEpB,kBAACf,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIwC,GAAI,IACrB,kBAAC,EAAD,CAASvD,KAAMyB,EAAYM,SAAUA,OAI3C,kBAACtB,EAAA,EAAD,CAAMC,WAAS,EAACE,QAAS,EAAGD,UAAU,MAAMwC,QAAQ,eAAeC,WAAW,SAASE,UAAWrB,GAChG,kBAACQ,EAAD,CAAWjB,MAAOA","file":"component---src-pages-past-results-js-7263010d212a72dce08d.js","sourcesContent":["import React from 'react'\nimport { Grid, Typography } from '@material-ui/core'\n\nimport { formatPartyName } from '../utils'\nimport { pastVotes } from '../utils/data'\n\nexport const Results = ({ year }) => {\n  const { votes, electorates } = pastVotes[year]\n  let array = []\n  for (let party in votes) {\n    array.push({\n      name: party,\n      votes: votes[party],\n      electorates: electorates[party]\n    })\n  }\n  return (\n    array.map(party => {\n      let electorates = party.electorates ?\n        party.electorates > 1 ?\n          ` ${party.electorates} electorates` :\n          ` ${party.electorates} electorate` :\n          ''\n      return (\n        <Grid container direction=\"row\" spacing={2} key={party.name}>\n          <Grid item xs={5}>\n            <Typography variant=\"body1\">{formatPartyName(party.name)}</Typography>\n          </Grid>\n          <Grid container item xs={7}>\n            <Grid item xs={5}>\n              <Typography variant=\"body1\">{party.votes.toFixed(1)} %</Typography>\n            </Grid>\n            <Grid item xs={7}>\n              <Typography variant=\"caption\">{electorates}</Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      )\n    })\n  )\n}\n","import React, { useState } from 'react'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport { Parliament } from '../components/parliament'\nimport { Results } from '../components/results'\nimport { getCoordinates, getSeatAllocations } from '../utils'\nimport { years } from '../utils/data'\n\nimport { Grid, Tabs, Tab } from '@material-ui/core'\n\nimport { useStyles } from '../utils'\n\nconst PastResults = () => {\n  const coordinates = getCoordinates()\n  const [activeYear, setActiveYear] = useState(years[0])\n  const [tabValue, setTabValue] = useState(0)\n  const [seats, setSeats] = useState(getSeatAllocations(activeYear))\n\n  const { hideMob, hideDesktop, parliament } = useStyles()\n\n  const handleChange = (event, newValue) => {\n    const { innerText } = event.target\n    setSeats(getSeatAllocations(innerText))\n    setActiveYear(innerText)\n    setTabValue(newValue)\n  }\n\n  const PastYears = ({ years }) => {\n    return (\n      <Tabs\n        value={tabValue}\n        onChange={handleChange}\n        indicatorColor='primary'\n        textColor='primary'\n        variant='scrollable'\n        scrollButtons='on'\n      >\n        {years.map(year => (\n          <Tab\n            label={year}\n            key={year}\n          >\n            {year}\n          </Tab>\n        ))}\n      </Tabs>\n      )\n  }\n\n  return (\n    <Layout>\n      <SEO title='Parliament' />\n      <Grid container spacing={2} direction='row' justify='center' alignItems='center' >\n        <Grid item xs={12} md={6} className={parliament}>\n          <Parliament coordinates={coordinates} seats={seats} year={activeYear}/>\n        </Grid>\n        <Grid container item spacing={1} xs={12} md={6} justify='center'>\n          <Grid item xs={12} className={hideDesktop}>\n            <PastYears years={years}/>\n          </Grid>\n          <Grid item xs={12} sm={10}>\n            <Results year={activeYear} setSeats={setSeats} />\n          </Grid>\n        </Grid>\n      </Grid>\n      <Grid container spacing={4} direction='row' justify='space-evenly' alignItems='center' className={hideMob}>\n        <PastYears years={years}/>\n      </Grid>\n    </Layout>\n  )\n}\n\nexport default PastResults\n"],"sourceRoot":""}