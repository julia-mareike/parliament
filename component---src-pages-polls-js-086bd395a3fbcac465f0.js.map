{"version":3,"sources":["webpack:///./src/pages/polls.js"],"names":["PollResults","pollsArray","Object","keys","polls","useStyles","parliament","pollTab","hideDesktop","hideMob","coordinates","getCoordinates","useState","tabValue","setTabValue","getSeatAllocations","electorates","votes","seats","setSeats","activePoll","setActivePoll","handleChange","event","newValue","textContent","target","name","removeWhitespace","Polls","value","onChange","indicatorColor","textColor","variant","map","poll","label","formatName","key","disabled","className","title","container","spacing","direction","justify","alignItems","item","xs","md","sm"],"mappings":"4FAAA,4IA0EeA,UAhEK,WAClB,IAAMC,EAAaC,OAAOC,KAAKC,KADP,EAE8BC,cAA9CC,EAFgB,EAEhBA,WAAYC,EAFI,EAEJA,QAASC,EAFL,EAEKA,YAAaC,EAFlB,EAEkBA,QACpCC,EAAcC,cAHI,EAKQC,mBAAS,GAAlCC,EALiB,KAKPC,EALO,OAMEF,mBAASG,YAAmB,KAAM,CAAEC,YAAaZ,IAAMH,EAAW,IAAIe,YAAaC,MAAOb,IAAMH,EAAW,IAAIgB,SAAlIC,EANiB,KAMVC,EANU,OAOYP,mBAASX,EAAW,IAAjDmB,EAPiB,KAOLC,EAPK,KASlBC,EAAe,SAACC,EAAOC,GAAc,IACjCC,EAAgBF,EAAMG,OAAtBD,YACFE,EAAOC,YAAiBH,GAC9BN,EAASJ,YAAmB,KAAM,CAAEE,MAAOb,IAAMuB,GAAMV,MAAOD,YAAaZ,IAAMuB,GAAMX,eACvFF,EAAYU,GACZH,EAAcM,IAGVE,EAAQ,WACZ,OACE,kBAAC,IAAD,CACEC,MAAOjB,EACPkB,SAAUT,EACVU,eAAe,UACfC,UAAU,UACVC,QAAQ,aAEPjC,EAAWkC,KAAI,SAAAC,GACd,OACE,kBAAC,IAAD,CACEC,MAAOC,YAAWF,GAClBT,KAAMS,EACNG,IAAKH,EACLI,SAAmB,QAATJ,EACVK,UAAWlC,SAQvB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKmC,MAAM,eACX,kBAAC,IAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,UAAU,MAAMC,QAAQ,SAASC,WAAW,UACtE,kBAAC,IAAD,CAAMC,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGT,UAAWnC,GACnC,kBAAC,IAAD,CAAYI,YAAaA,EAAaQ,MAAOA,KAE/C,kBAAC,IAAD,CAAMyB,WAAS,EAACK,MAAI,EAACJ,QAAS,EAAGK,GAAI,GAAIC,GAAI,EAAGJ,QAAQ,UACtD,kBAAC,IAAD,CAAME,MAAI,EAACC,GAAI,GAAIR,UAAWjC,GAC5B,kBAACqB,EAAD,OAEF,kBAAC,IAAD,CAAMmB,MAAI,EAACC,GAAI,GAAIE,GAAI,IACrB,kBAAC,IAAD,CAAS/B,WAAYA,MAGzB,kBAAC,IAAD,CAAMuB,WAAS,EAACC,QAAS,EAAGC,UAAU,MAAMC,QAAQ,eAAeC,WAAW,SAASN,UAAWhC,GAChG,kBAACoB,EAAD","file":"component---src-pages-polls-js-086bd395a3fbcac465f0.js","sourcesContent":["import React, { useState } from 'react'\nimport { Grid, Tabs, Tab } from '@material-ui/core'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport { Parliament } from '../components/parliament'\nimport { Results } from '../components/results'\n\nimport { getCoordinates, getSeatAllocations, formatName, removeWhitespace, useStyles } from '../utils'\nimport { polls } from '../utils/polls'\nconst PollResults = () => {\n  const pollsArray = Object.keys(polls)\n  const { parliament, pollTab, hideDesktop, hideMob } = useStyles()\n  const coordinates = getCoordinates()\n\n  const [tabValue, setTabValue] = useState(0)\n  const [seats, setSeats] = useState(getSeatAllocations(null, { electorates: polls[pollsArray[0]].electorates, votes: polls[pollsArray[0]].votes }))\n  const [activePoll, setActivePoll] = useState(pollsArray[0])\n\n  const handleChange = (event, newValue) => {\n    const { textContent } = event.target\n    const name = removeWhitespace(textContent)\n    setSeats(getSeatAllocations(null, { votes: polls[name].votes, electorates: polls[name].electorates }))\n    setTabValue(newValue)\n    setActivePoll(name)\n  }\n\n  const Polls = () => {\n    return (\n      <Tabs\n        value={tabValue}\n        onChange={handleChange}\n        indicatorColor='primary'\n        textColor='primary'\n        variant='fullWidth'\n      >\n        {pollsArray.map(poll => {\n          return (\n            <Tab\n              label={formatName(poll)}\n              name={poll}\n              key={poll}\n              disabled={poll === 'rnz'}\n              className={pollTab}\n            />\n          )\n        })}\n      </Tabs>\n    )\n  }\n\n  return (\n    <Layout>\n      <SEO title='Parliament' />\n      <Grid container spacing={2} direction='row' justify='center' alignItems='center' >\n        <Grid item xs={12} md={6} className={parliament}>\n          <Parliament coordinates={coordinates} seats={seats} />\n        </Grid>\n        <Grid container item spacing={1} xs={12} md={6} justify='center'>\n          <Grid item xs={12} className={hideDesktop}>\n            <Polls />\n          </Grid>\n          <Grid item xs={12} sm={10}>\n            <Results activePoll={activePoll} />\n          </Grid>\n        </Grid>\n        <Grid container spacing={4} direction='row' justify='space-evenly' alignItems='center' className={hideMob}>\n          <Polls />\n        </Grid>\n      </Grid>\n    </Layout>\n  )\n}\n\nexport default PollResults\n"],"sourceRoot":""}